use std::{collections::btree_map, sync::OnceLock};

use crate::{
    character::{level::Level, spells::SpellLevel},
    dice::consts::D8,
};

use super::{Class, ClassType, Subclass};

pub static DRUID: OnceLock<Class> = OnceLock::new();
pub fn get_druid() -> &'static Class<'static> {
    DRUID.get_or_init(|| Class {
        class_name: "Druid",
        hit_dice: D8,
        asi: {
            use Level::*;
            vec![L04, L08, L12, L16, L19]
        },
        class_features: vec![],
        subclass: Subclass {
            subclass_name: "Circle of the Dire Beast",
            subclass_features: vec![],
        },
        class_type: ClassType::Spellcasting {
            cantrips: [2, 2, 2, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
            spell_slot_table: {
                use Level::*;
                use SpellLevel::*;

                btreemap![
                    // 01
                    (L01, L1) => 2,
                    (L01, L2) => 0,
                    (L01, L3) => 0,
                    (L01, L4) => 0,
                    (L01, L5) => 0,
                    (L01, L6) => 0,
                    (L01, L7) => 0,
                    (L01, L8) => 0,
                    (L01, L9) => 0,
                    // 02
                    (L02, L1) => 3,
                    (L02, L2) => 0,
                    (L02, L3) => 0,
                    (L02, L4) => 0,
                    (L02, L5) => 0,
                    (L02, L6) => 0,
                    (L02, L7) => 0,
                    (L02, L8) => 0,
                    (L02, L9) => 0,
                    // 03
                    (L03, L1) => 4,
                    (L03, L2) => 2,
                    (L03, L3) => 0,
                    (L03, L4) => 0,
                    (L03, L5) => 0,
                    (L03, L6) => 0,
                    (L03, L7) => 0,
                    (L03, L8) => 0,
                    (L03, L9) => 0,
                    // 04
                    (L04, L1) => 4,
                    (L04, L2) => 3,
                    (L04, L3) => 0,
                    (L04, L4) => 0,
                    (L04, L5) => 0,
                    (L04, L6) => 0,
                    (L04, L7) => 0,
                    (L04, L8) => 0,
                    (L04, L9) => 0,
                    // 05
                    (L05, L1) => 4,
                    (L05, L2) => 3,
                    (L05, L3) => 2,
                    (L05, L4) => 0,
                    (L05, L5) => 0,
                    (L05, L6) => 0,
                    (L05, L7) => 0,
                    (L05, L8) => 0,
                    (L05, L9) => 0 ,
                    // 06
                    (L06, L1) => 4,
                    (L06, L2) => 3,
                    (L06, L3) => 3,
                    (L06, L4) => 0,
                    (L06, L5) => 0,
                    (L06, L6) => 0,
                    (L06, L7) => 0,
                    (L06, L8) => 0,
                    (L06, L9) => 0,
                    // 07
                    (L07, L1) => 4,
                    (L07, L2) => 3,
                    (L07, L3) => 3,
                    (L07, L4) => 1,
                    (L07, L5) => 0,
                    (L07, L6) => 0,
                    (L07, L7) => 0,
                    (L07, L8) => 0,
                    (L07, L9) => 0,
                    // 08
                    (L08, L1) => 4,
                    (L08, L2) => 3,
                    (L08, L3) => 3,
                    (L08, L4) => 2,
                    (L08, L5) => 0,
                    (L08, L6) => 0,
                    (L08, L7) => 0,
                    (L08, L8) => 0,
                    (L08, L9) => 0,
                    // 09
                    (L09, L1) => 4,
                    (L09, L2) => 3,
                    (L09, L3) => 3,
                    (L09, L4) => 3,
                    (L09, L5) => 1,
                    (L09, L6) => 0,
                    (L09, L7) => 0,
                    (L09, L8) => 0,
                    (L09, L9) => 0,
                    // 10
                    (L10, L1) => 4,
                    (L10, L2) => 3,
                    (L10, L3) => 3,
                    (L10, L4) => 3,
                    (L10, L5) => 2,
                    (L10, L6) => 0,
                    (L10, L7) => 0,
                    (L10, L8) => 0,
                    (L10, L9) => 0,
                    // 11
                    (L11, L1) => 4,
                    (L11, L2) => 3,
                    (L11, L3) => 3,
                    (L11, L4) => 3,
                    (L11, L5) => 2,
                    (L11, L6) => 1,
                    (L11, L7) => 0,
                    (L11, L8) => 0,
                    (L11, L9) => 0,
                    // 12
                    (L12, L1) => 4,
                    (L12, L2) => 3,
                    (L12, L3) => 3,
                    (L12, L4) => 3,
                    (L12, L5) => 2,
                    (L12, L6) => 1,
                    (L12, L7) => 0,
                    (L12, L8) => 0,
                    (L12, L9) => 0,
                    // 13
                    (L13, L1) => 4,
                    (L13, L2) => 3,
                    (L13, L3) => 3,
                    (L13, L4) => 3,
                    (L13, L5) => 2,
                    (L13, L6) => 1,
                    (L13, L7) => 1,
                    (L13, L8) => 0,
                    (L13, L9) => 0,
                    // 14
                    (L14, L1) => 4,
                    (L14, L2) => 3,
                    (L14, L3) => 3,
                    (L14, L4) => 3,
                    (L14, L5) => 2,
                    (L14, L6) => 1,
                    (L14, L7) => 1,
                    (L14, L8) => 0,
                    (L14, L9) => 0,
                    // 15
                    (L15, L1) => 4,
                    (L15, L2) => 3,
                    (L15, L3) => 3,
                    (L15, L4) => 3,
                    (L15, L5) => 2,
                    (L15, L6) => 1,
                    (L15, L7) => 1,
                    (L15, L8) => 1,
                    (L15, L9) => 0,
                    // 16
                    (L16, L1) => 4,
                    (L16, L2) => 3,
                    (L16, L3) => 3,
                    (L16, L4) => 3,
                    (L16, L5) => 2,
                    (L16, L6) => 1,
                    (L16, L7) => 1,
                    (L16, L8) => 1,
                    (L16, L9) => 0,
                    // 17
                    (L17, L1) => 4,
                    (L17, L2) => 3,
                    (L17, L3) => 3,
                    (L17, L4) => 3,
                    (L17, L5) => 2,
                    (L17, L6) => 1,
                    (L17, L7) => 1,
                    (L17, L8) => 1,
                    (L17, L9) => 1,
                    // 18
                    (L18, L1) => 4,
                    (L18, L2) => 3,
                    (L18, L3) => 3,
                    (L18, L4) => 3,
                    (L18, L5) => 3,
                    (L18, L6) => 1,
                    (L18, L7) => 1,
                    (L18, L8) => 1,
                    (L18, L9) => 1,
                    // 19
                    (L19, L1) => 4,
                    (L19, L2) => 3,
                    (L19, L3) => 3,
                    (L19, L4) => 3,
                    (L19, L5) => 3,
                    (L19, L6) => 2,
                    (L19, L7) => 1,
                    (L19, L8) => 1,
                    (L19, L9) => 1,
                    // 20
                    (L20, L1) => 4,
                    (L20, L2) => 3,
                    (L20, L3) => 3,
                    (L20, L4) => 3,
                    (L20, L5) => 3,
                    (L20, L6) => 2,
                    (L20, L7) => 2,
                    (L20, L8) => 1,
                    (L20, L9) => 1,
                ]
            },
            spell_list: {
                use crate::character::spells::consts::*;
                vec![
                    // CONTROL_FLAMES,
                    // CREATE_BONFIRE,
                    // DRUIDCRAFT,
                    // FROSTBITE,
                    // GUIDANCE,
                    // GUST,
                    // INFESTATION,
                    // MAGIC_STONE,
                    // MENDING,
                    // MOLD_EARTH,
                    // POISON_SPRAY,
                    // PRIMAL_SAVAGERY,
                    // PRODUCE_FLAME,
                    // RESISTANCE,
                    // SHAPE_WATER,
                    // SHILLELAGH,
                    // THORN_WHIP,
                    // THUNDERCLAP,
                    // ABSORB_ELEMENTS,
                    // ANIMAL_FRIENDSHIP,
                    // BEAST_BOND,
                    // CHARM_PERSON,
                    // CREATE_OR_DESTROY_WATER,
                    // CURE_WOUNDS,
                    // DETECT_MAGIC,
                    // DETECT_POISON_AND_DISEASE,
                    // EARTH_TREMOR,
                    // ENTANGLE,
                    // FAERIE_FIRE,
                    // FOG_CLOUD,
                    // GOODBERRY,
                    // GUIDING_HAND,
                    // HEALING_WORD,
                    // ICE_KNIFE,
                    // JUMP,
                    // LONGSTRIDER,
                    // PROTECTION_FROM_EVIL_AND_GOOD,
                    // PURIFY_FOOD_AND_DRINK,
                    // SNARE,
                    // SPEAK_WITH_ANIMALS,
                    // THUNDERWAVE,
                    // WILD_CUNNING,
                    // ANIMAL_MESSENGER,
                    // AUGURY,
                    // BARKSKIN,
                    // BEAST_SENSE,
                    // CONTINUAL_FLAME,
                    // DARKVISION,
                    // DUST_DEVIL,
                    // EARTHBIND,
                    // ENHANCE_ABILITY,
                    // ENLARGE_REDUCE,
                    // FIND_TRAPS,
                    // FLAME_BLADE,
                    // FLAMING_SPHERE,
                    // GUST_OF_WIND,
                    // HEALING_SPIRIT,
                    // HEAT_METAL,
                    // LESSER_RESTORATION,
                    // LOCATE_ANIMALS_OR_PLANTS,
                    // LOCATE_OBJECT,
                    // MOONBEAM,
                    // PASS_WITHOUT_TRACE,
                    // PROTECTION_FROM_POISON,
                    // SKYWRITE,
                    // SPIKE_GROWTH,
                    // SUMMON_BEAST,
                    // WARDING_WIND,
                    // AURA_OF_VITALITY,
                    // CALL_LIGHTNING,
                    // CONJURE_ANIMALS,
                    // DAYLIGHT,
                    // DISPEL_MAGIC,
                    // ELEMENTAL_WEAPON,
                    // ERUPTING_EARTH,
                    // FEIGN_DEATH,
                    // FLAME_ARROWS,
                    // MELD_INTO_STONE,
                    // PLANT_GROWTH,
                    // PROTECTION_FROM_ENERGY,
                    // REVIVIFY,
                    // SLEET_STORM,
                    // SPEAK_WITH_PLANTS,
                    // SUMMON_FEY,
                    // TIDAL_WAVE,
                    // WALL_OF_WATER,
                    // WATER_BREATHING,
                    // WATER_WALK,
                    // WIND_WALL,
                    // BLIGHT,
                    // CHARM_MONSTER,
                    // CONFUSION,
                    // CONJURE_MINOR_ELEMENTALS,
                    // CONJURE_WOODLAND_BEINGS,
                    // CONTROL_WATER,
                    // DIVINATION,
                    // DOMINATE_BEAST,
                    // ELEMENTAL_BANE,
                    // FIRE_SHIELD,
                    // FREEDOM_OF_MOVEMENT,
                    // GIANT_INSECT,
                    // GRASPING_VINE,
                    // GUARDIAN_OF_NATURE,
                    // HALLUCINATORY_TERRAIN,
                    // ICE_STORM,
                    // LOCATE_CREATURE,
                    // POLYMORPH,
                    // STONE_SHAPE,
                    // STONESKIN,
                    // SUMMON_ELEMENTAL,
                    // WALL_OF_FIRE,
                    // WATERY_SPHERE,
                    // ANTILIFE_SHELL,
                    // AWAKEN,
                    // COMMUNE_WITH_NATURE,
                    // CONE_OF_COLD,
                    // CONJURE_ELEMENTAL,
                    // CONTAGION,
                    // CONTROL_WINDS,
                    // GEAS,
                    // GREATER_RESTORATION,
                    // INSECT_PLAGUE,
                    // MAELSTROM,
                    // MASS_CURE_WOUNDS,
                    // PLANAR_BINDING,
                    // REINCARNATE,
                    // SCRYING,
                    // SUMMON_DRACONIC_SPIRIT,
                    // TRANSMUTE_ROCK,
                    // TREE_STRIDE,
                    // WALL_OF_STONE,
                    // WRATH_OF_NATURE,
                    // BONES_OF_THE_EARTH,
                    // CONJURE_FEY,
                    // DRUID_GROVE,
                    // FIND_THE_PATH,
                    // FLESH_TO_STONE,
                    // HEAL,
                    // HEROES_FEAST,
                    // INVESTITURE_OF_FLAME,
                    // INVESTITURE_OF_ICE,
                    // INVESTITURE_OF_STONE,
                    // INVESTITURE_OF_WIND,
                    // MOVE_EARTH,
                    // PRIMORDIAL_WARD,
                    // SUNBEAM,
                    // TRANSPORT_VIA_PLANTS,
                    // WALL_OF_THORNS,
                    // WIND_WALK,
                    // DRACONIC_TRANSFORMATION,
                    // FIRE_STORM,
                    // MIRAGE_ARCANE,
                    // PLANE_SHIFT,
                    // REGENERATE,
                    // REVERSE_GRAVITY,
                    // SYMBOL,
                    // WHIRLWIND,
                    // ANIMAL_SHAPES,
                    // ANTIPATHY_SYMPATHY,
                    // CONTROL_WEATHER,
                    // EARTHQUAKE,
                    // FEEBLEMIND,
                    // INCENDIARY_CLOUD,
                    // SUNBURST,
                    // TSUNAMI,
                    // FORESIGHT,
                    // SHAPECHANGE,
                    // STORM_OF_VENGEANCE,
                    // TRUE_RESURRECTION,
                ]
            },
        },
    })
}
